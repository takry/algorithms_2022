"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib


def prim(s):
    a = set()
    while s[:-1] != '':
        a.add(s[:-1])
        s = s[:-1]
    return a


def priv(s, a):
    while s[1:] != '':
        a.add(s[1:])
        s = s[1:]
    return a


def midl(s, a):
    while s[1:-1] != '':
        a.add(s[1:-1])
        s = s[1:-1]
    return a


def pdstr():
    s = input('Введите слово ')
    a = prim(s)
    priv(s, a)
    midl(s, a)
    b = set()
    for i in a:
        t = hashlib.sha256(i.encode('utf-8')).hexdigest()
        b.add(t)
    return f'{s} - {len(a)} уникальных подстрок:\n {a} \n Хэши:\n {b}'


print(pdstr())
